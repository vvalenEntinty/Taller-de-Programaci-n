program ejercicio;
type
	
	// registro para el arbol i
	venta=record
		codigo:integer;
		fecha:integer;
		cant_vendidas:integer;
	end;
	
	// primer arbol 
	arbol_i=^nodo_i;
	nodo_i=record
		dato:venta;
		hi:arbol_i;
		hd:arbol_i;
	end;
{---------------------------------------}	
	// registro para el arbol ii
	reg_ii=record
		codigo:integer;
		cant_vendidasTotal:integer;
	end;	
		
	// segundo arbol	
	arbol_ii =^nodo_ii;
	nodo_ii=record
		dato:reg_ii;
		hi:arbol_ii;
		hd:arbol_ii;
	end;	
{---------------------------------------}	
		// lista de ventas realizadas
		lista=^nodo;
		nodo=record
			dato:venta;
			sig:lista;
		end;
		
		// registro para el arbol iii
		reg_iii=record
		codigo:integer;
		lista:lista;
	end;	
	
	// segundo arbol	
	arbol_iii =^nodo_iii;
	nodo_iii=record
		dato:reg_iii;
		hi:arbol_iii;
		hd:arbol_iii;
	end;	
	
procedure cargarArboles (var ai:arbol_i; var aii:arbol_ii; var aiii:arbol_iii);

procedure leerVentas (var v:venta);
begin
	v.codigo:=random(100);
	v.fecha:=random(100);
	v.cant_vendidas:=random(100);
end;

procedure cargarArbol_i (var ai:arbol_i; v:venta);
begin
	if (ai =nil) then
	begin
		new(ai);
		ai^.dato:=v;
		ai^.hi:=nil;
		ai^.hd:=nil
	end
	else
		if (v.codigo < ai^.dato.codigo) then 
			cargarArbol_i(ai^.hi,v)
			else if (v.codigo >= ai^.dato.codigo) then
				cargarArbol_i(ai^.hd,v);
end;



procedure cargarArbol_ii (var aii:arbol_ii; cod,cant:integer);
begin
	if (aii =nil) then
	begin
		new(aii);
		aii^.dato.codigo:=cod;
		aii^.dato.cant_vendidastotal:=cant;
		aii^.hi:=nil;
		aii^.hd:=nil
	end
	else
		if (cod < aii^.dato.codigo) then 
			cargarArbol_ii(aii^.hi,cod,cant)
			else if (cod > aii^.dato.codigo) then
				cargarArbol_ii(aii^.hd,cod,cant)
			else
				aii^.dato.cant_vendidasTotal := aii^.dato.cant_vendidasTotal + cant;
end;

procedure agregarAdelante (var l:lista; v:venta);
var
	nue:lista;
begin
	new(nue);
	nue^.dato:=v;
	nue^.sig:=l;
	l:=nue;
end;

procedure cargarArbol_iii (var aiii:arbol_iii; v:venta);
begin	
	if (aiii=nil) then
	begin
		new(aiii);
		aiii^.dato.codigo:=v.codigo;
		aiii^.dato.lista:=nil;
		aiii^.HI:=nil;
		aiii^.HD:=nil;
		agregarAdelante(aiii^.dato.lista,v);
	end
	else
			if (v.codigo < aiii^.dato.codigo) then
				cargarArbol_iii(aiii^.HI,v)
			else if (v.codigo > aiii^.dato.codigo) then
					cargarArbol_iii(aiii^.HD,v)
			else if (v.codigo = aiii^.dato.codigo) then
					agregarAdelante(aiii^.dato.lista, v);
end;
	
var
	v:venta;
begin
	ai:=nil;
	aii:=nil;
	aiii:=nil;
	
	leerVentas(v);
	while (v.codigo <> 0) do begin
		cargarArbol_i(ai,v);
		cargarArbol_ii(aii,v.codigo,v.cant_vendidas);
		cargarArbol_iii(aiii,v);
		leerVentas(v);
	end;
end;

function contarVentasFecha_i(a:arbol_i; fecha:integer):integer;
begin
	if(a = nil) then
		contarVentasFecha_i:=0
	else
		if (a^.dato.fecha = fecha) then 
			contarVentasFecha_i:= 1+contarVentasFecha_i(a^.HI,fecha)+contarVentasFecha_i(a^.HD,fecha)
			else
				contarVentasFecha_i:= contarVentasFecha_i(a^.HI,fecha)+contarVentasFecha_i(a^.HD,fecha);
	end;


procedure maxVendidas (a:arbol_ii; var max:integer; var cod:integer);
begin	
	if (a<>nil) then begin
		if (a^.dato.cant_vendidasTotal>max) then begin
			max:=a^.dato.cant_vendidasTotal;
			cod:=a^.dato.codigo;
		end;
			maxVendidas(a^.HI,max,cod);
			maxVendidas(a^.HD,max,cod);
		end;
	end;

procedure 	MaxVentas_Arboliii(a:arbol_iii;var max,cod:integer);
procedure recorrerLista (l:lista; var max,cod:integer);
begin
	while (l<>nil) do 
	begin
		if (l^.dato.cant_vendidas > max) then
		begin
			max:=l^.dato.cant_vendidas;
			cod:=l^.dato.codigo;
		end;
		l:=l^.sig;
	end;
end;

begin
	 if (a <> nil) then begin
		recorrerLista(a^.dato.lista,max,cod);
	MaxVentas_Arboliii(a^.HI,max,cod);
	MaxVentas_Arboliii(a^.HD,max,cod);
end;
end;

 // Programa Principal
var
	ai:arbol_i;
	aii:arbol_ii;
	aiii:arbol_iii;
	
	fecha_i:integer;
	maxiii,max,cod,codiii:integer;
begin
	max:=-1;
	maxiii:=-1;
	cod:=0;
	codiii:=0;
	randomize;
	cargarArboles(ai,aii,aiii);
	writeln('------ Punto A ------');
	writeln('Ingresar una fecha: '); readln(fecha_i);
	writeln('Total de productos vendidos en la fecha ',fecha_i,': ',contarVentasFecha_i(ai,fecha_i));
	writeln('');
	maxVendidas(aii,max,cod);
	writeln('------ Punto B ------');
	writeln('Codigo del producto mas vendido ',cod, ' con ',max, ' unidades');
	writeln('');
	MaxVentas_Arboliii(aiii,maxiii,codiii);
	writeln('------ Punto C ------');
	writeln('Codigo del producto mas vendido ',codiii, ' con ',maxiii, ' unidades');
end.


