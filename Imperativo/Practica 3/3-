{3.- Implementar un programa que invoque a los siguientes módulos. 
a. Un módulo recursivo que retorne un vector de 20 números enteros “random” mayores a 300 
y menores a 1550 (incluidos ambos).  
b. Un módulo que reciba el vector generado en a) y lo retorne ordenado. (Utilizar lo realizado 
en la práctica anterior) 
c. Un módulo que realice una búsqueda dicotómica en el vector, utilizando el siguiente 
encabezado: 
Procedure busquedaDicotomica (v: vector; ini,fin: indice; dato:integer; var pos: indice);  
Nota: El parámetro “pos” debe retornar la posición del dato o -1 si el dato no se encuentra 
en el vector.}

program ejercicio;
const
	dimF=20;
type
	
	vector= array [1..dimF] of integer;
	
	function obtenerValor(): integer;
	begin 
		obtenerValor := 300 + random((1550-300 +1 ));
	end;
	
	procedure cargarVector (var v:vector;var dimL:integer);
	begin
		if(dimL<dimF) then begin
			dimL := dimL + 1;
			v[diml]:= obtenerValor();
			cargarVector(v,dimL);
		end;
	end;

procedure OrdenarSeleccion(var v:vector; diml:integer);
var
	i,j,pos:integer;
	item:integer;
begin
	for i := 1 to dimL-1 do begin
		pos:=i;
		for j:= i+1 to dimL do
			if(v[j]<v[pos]) then
				pos:=j;
				
			item:=v[pos];
			v[pos]:=v[i];
			v[i]:=item;
	end;
end;

procedure busquedaDicotomica (v: vector; ini,fin: integer; dato:integer; var pos: integer);
begin
	ini


var
	v:vector;
	dimL:integer;
begin 
	dimL:=0;
	randomize;
	cargarVector(v,dimL);
	OrdenarSeleccion(v,diml);
end.
