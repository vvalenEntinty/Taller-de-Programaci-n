program ej3p4;
type
	
	producto=record
		cod_prod:integer;
		total_vendidas:integer;
		monto_Total:real;
	end;
	
	venta=record
		cod_venta:integer;
		cod_prod:integer;
		cant_vendidas:integer;
		precio:real;
	end;
	
	arbol=^nodo;
	
	nodo=record
		dato:producto;
		HI:arbol;
		HD:arbol;
	end;
	
procedure cargarArbol (var a:arbol);

procedure leerVenta (var v:venta);
begin
	writeln('Ingresar codigo de venta');readln(v.cod_venta);
	if (v.cod_venta <> -1) then begin
		writeln('Ingresar el codigo de propducto: ');readln(v.cod_prod);
		writeln('Ingresar la cantidad vendidas: ');readln(v.cant_vendidas);
		writeln('Ingresar el precio: ');readln(v.precio);
	end;
end;

{procedure leerVenta (var v:venta);
begin
	v.cod_venta:=random(100)-1;
	if (v.cod_venta <> -1) then begin
		v.cod_prod:=random(100);
		v.cant_vendidas:=random(100);
		v.precio:=random(100);
	end;
end;}

procedure cargarProducto (var p:producto; v:venta);
begin
	p.cod_prod:=v.cod_prod;
	p.total_vendidas:= v.cant_vendidas;
	p.monto_total:=v.cant_vendidas*v.precio;
end;


{a^.dato.total_vendidas:= a^.dato.total_vendidas + v.cant_vendidas;
a^.dato.monto_total:= a^.dato.monto_total + (v.cant_vendidas * v.precio);} 

procedure generarNodo (var a:arbol; p:producto);
begin
	if (a = nil) then 
	begin
		new(a);
		a^.dato:=p;
		a^.HI:=nil;
		a^.HD:=nil;
	end
	else begin
		if (a^.dato.cod_prod = p.cod_prod) then
		begin
			a^.dato.total_vendidas:=a^.dato.total_vendidas + p.total_vendidas;
			a^.dato.monto_total:=a^.dato.monto_total+p.monto_total;
		end
		else if (a^.dato.cod_prod > p.cod_prod) then
			generarNodo(a^.HI,p)
			else
				generarNodo(a^.HD,p)
	end;
end;

var
	v:venta;
	p:producto;
begin
	leerVenta(v);
	while (v.cod_venta <> -1) do
	begin
		cargarProducto(p,v);
		generarNodo(a,p);
		leerVenta(v);
	end;	
end;

procedure imprimir (a:arbol);
begin
	if (a <> nil) then begin
	writeln('Codigo de venta: ',a^.dato.cod_prod);
	writeln('total vendidas: ',a^.dato.total_vendidas);
	writeln('monto total: ',a^.dato.monto_total:0:2);
	writeln('-------------------------------');
	imprimir(a^.HI);
	imprimir(a^.HD);
	end;
end;

// programa princial

var
	a:arbol;
begin
	a:=nil;
	randomize;
	cargarArbol(a);
	imprimir (a);
end.
